127.0.0.1 2022-10-19 00:42:11.553279 GET http://localhost:8888/get/users 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 00:42:42.315768 GET http://localhost:8888/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 00:43:31.995610 GET http://localhost:8888/get/users?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "1 user entry found",
  "data": {
    "user_id": 1,
    "username": "admin",
    "password": "a2025bd8b86a53fccf6f42eae008ccbf65dcf6aa55e0e6a477b57c5d74b1e611e5902fe9673d8cddb84896005e125d589e39e258a7fbeb3e7208b866e7746e60",
    "create_time": "2022-10-19 00:23:52.930"
  }
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 00:43:39.380621 GET http://localhost:8888/get/users?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "1 user entry found",
  "data": {
    "user_id": 1,
    "username": "admin",
    "password": "a2025bd8b86a53fccf6f42eae008ccbf65dcf6aa55e0e6a477b57c5d74b1e611e5902fe9673d8cddb84896005e125d589e39e258a7fbeb3e7208b866e7746e60",
    "create_time": "2022-10-19 00:23:52.930"
  }
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 00:54:07.269496 GET http://localhost:8888/createTable?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 01:07:20.878891 GET http://localhost:8888/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 01:10:20.068310 GET http://localhost:8888/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:11:55.539044 GET http://localhost:8888/add?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 01:19:15.942539 GET http://localhost:8888/logout 200 OK
{"request.params": {}}
{
  "message": "user logged out",
  "user_id": null
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:19:23.010407 GET http://localhost:8888/logout?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "user logged out",
  "user_id": "1"
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:25:07.708293 GET http://localhost:8888/createTable?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:25:18.320686 GET http://localhost:8888/createTable/bartenders?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "1 table created",
  "table": "bartenders",
  "columns": [
    "token IVA1WTF3UDHOSHVACM1GUK1DRVVAMFE9PT9NQVDWRVFBQUFBQUFBQUNNQJNWELPYSMZHV1NVAKFFEGXJYVVMZZ09 NOT NULL"
  ]
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:27:06.749152 GET http://localhost:8888/createTable?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "token",
          "type": "IVA1WTF3UDHOSHVACM1GUK1DRVVAMFE9PT9NQVDWRVFBQUFBQUFBQUNNQJNWELPYSMZHV1NVAKFFEGXJYVVMZZ09 NOT NULL"
        }
      ]
    }
  ]
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:27:33.586221 GET http://localhost:8888/deleteTable/bartenders?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {"token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"}}
{
  "message": "1 table deleted!",
  "table": "bartenders"
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:35:29.757463 GET http://localhost:8888/createTable?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
cookie_info = ('user_id', '1')
127.0.0.1 2022-10-19 01:35:44.010807 GET http://localhost:8888/createTable/bartenders?token=IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09 200 OK
{"request.params": {}}
{
  "message": "missing paramaters",
  "required": [
    {
      "user_id": "INTEGER",
      "{ref}_id": "INTEGER",
      "{ref}_time": "DATETIME",
      "column_name": "column_type",
      "available_types": [
        "INTEGER",
        "DOUBLE",
        "TEXT",
        "DATETIME"
      ]
    }
  ],
  "available_types": [
    "INTEGER",
    "DOUBLE",
    "TEXT",
    "DATETIME"
  ],
  "Exception": "\"{ref}_id\" not required when creating \"users\" table",
  "submitted": []
}
127.0.0.1 2022-10-19 04:13:00.535225 GET http://localhost:8888/createTable 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 04:13:30.363628 GET http://localhost:8888/login?username=admin&password=admin 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 04:13:42.026515 GET http://localhost:8888/createTable 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 04:13:49.684586 GET http://localhost:8888/createTable/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /createTable",
  "description": "create a table and insert it into the database",
  "end_points": {
    "/createTable": {
      "returns": "return all tables[] in the database"
    },
    "/createTable/usage": {
      "returns": "message: 'usage-info'"
    },
    "/createTable/<table_name>": {
      "returns": "message: 'missing parameters'"
    },
    "/createTable/<table_name>/<column_name>/<column_type>": {
      "url_paths": "create columns: 'param_name=param_'",
      "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
      "response": {
        "message": "1 table created",
        "table": "steps",
        "columns": [
          "step_id INTEGER PRIMARY KEY",
          "user_id INTEGER NOT NULL",
          "step_count INTEGER NOT NULL",
          "latitude DOUBLE NOT NULL",
          "longitude DOUBLE NOT NULL",
          "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
        ]
      }
    },
    "/createTable/<table_name>?column_name=column_type": {
      "params": "create columns: 'param_name=param_value'",
      "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
      "response": {
        "message": "1 table created",
        "table": "steps",
        "columns": [
          "step_id INTEGER PRIMARY KEY",
          "user_id INTEGER NOT NULL",
          "step_count INTEGER NOT NULL",
          "latitude DOUBLE NOT NULL",
          "longitude DOUBLE NOT NULL",
          "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
        ]
      }
    },
    "Required": {
      "Parameters": {
        "user_id": "INTEGER",
        "{ref}_id": "INTEGER",
        "{ref}_time": "DATETIME",
        "column_name": "lowercase with underscores where appropriate",
        "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
      }
    },
    "Exception": "'{ref}_id' not required when creating 'users' table",
    "Response": {
      "message": "number of tables created",
      "table": "the table name",
      "columns[]": "array of columns with their type"
    }
  }
}
127.0.0.1 2022-10-19 04:30:58.271940 GET http://localhost:8888/createTable/restaurant_info/restaurant_id/INTEGER/name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/manager_name/TEXT/user_id/INTEGER/email/TEXT/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_info",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "manager_name TEXT NOT NULL",
    "email TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 04:33:11.099103 GET http://localhost:8888/createTable/restaurant_profile/restaurant_id/INTEGER/name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/manager_name/TEXT/manager_id/INTEGER/email/TEXT/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "SQLite_Error": [
    "table \"restaurant_profile\" has more than one primary key"
  ],
  "query": "CREATE TABLE restaurant_profile (manager_id INTEGER PRIMARY KEY, restaurant_id INTEGER PRIMARY KEY, name TEXT NOT NULL, address TEXT NOT NULL, bio TEXT NOT NULL, phone_number TEXT NOT NULL, manager_name TEXT NOT NULL, email TEXT NOT NULL, create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime')));",
  "columns": [
    "manager_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER PRIMARY KEY",
    "name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "manager_name TEXT NOT NULL",
    "email TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ],
  "kwargs": {
    "table": "restaurant_profile",
    "columns": [
      "manager_id INTEGER PRIMARY KEY",
      "restaurant_id INTEGER PRIMARY KEY",
      "name TEXT NOT NULL",
      "address TEXT NOT NULL",
      "bio TEXT NOT NULL",
      "phone_number TEXT NOT NULL",
      "manager_name TEXT NOT NULL",
      "email TEXT NOT NULL",
      "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
    ]
  },
  "table": "restaurant_profile"
}
127.0.0.1 2022-10-19 04:37:28.524505 GET http://localhost:8888/deleteTable/restaurant_profile 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_info",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "manager_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 04:37:35.610186 GET http://localhost:8888/deleteTable/restaurant_info 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_info"
}
127.0.0.1 2022-10-19 04:37:40.539913 GET http://localhost:8888/deleteTable/restaurant_profile 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 04:40:10.071731 GET http://localhost:8888/createTable/restaurant_profile/restaurant_id/INTEGER/name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/manager_name/TEXT/manager_id/INTEGER/email/TEXT/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_profile",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "manager_id INTEGER NOT NULL",
    "name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "manager_name TEXT NOT NULL",
    "email TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 04:40:28.568901 GET http://localhost:8888/deleteTable/restaurant_profile 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_profile"
}
127.0.0.1 2022-10-19 04:43:48.713721 GET http://localhost:8888/createTable/restaurant_profile/restaurant_id/INTEGER/restaurant_name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/manager_id/INTEGER/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_profile",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "manager_id INTEGER NOT NULL",
    "restaurant_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 04:48:19.265138 GET http://localhost:8888/createTable/managers/manager_id/INTEGER/user_id/INTEGER/restaurant_id/INTEGER/name/TEXT/phone_number/TEXT/email/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "managers",
  "columns": [
    "manager_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "restaurant_id INTEGER NOT NULL",
    "name TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "email TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 04:48:26.859884 GET http://localhost:8888/deleteTable/restaurant_profile 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_profile"
}
127.0.0.1 2022-10-19 04:49:22.138340 GET http://localhost:8888/createTable/restaurant_profile/restaurant_id/INTEGER/manager_id/INTEGER/restaurant_name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/profile_pic/TEXT/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_profile",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "manager_id INTEGER NOT NULL",
    "restaurant_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 04:52:49.403647 GET http://localhost:8888/deleteTable/restaurant_profile 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_profile"
}
127.0.0.1 2022-10-19 04:53:11.872599 GET http://localhost:8888/createTable/restaurants/restaurant_id/INTEGER/manager_id/INTEGER/restaurant_name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/profile_pic/TEXT/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurants",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "manager_id INTEGER NOT NULL",
    "restaurant_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 04:53:57.049120 GET http://localhost:8888/createTable/managers/manager_id/INTEGER/user_id/INTEGER/restaurant_id/INTEGER/name/TEXT/phone_number/TEXT/email/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "SQLite_Error": [
    "table managers already exists"
  ],
  "query": "CREATE TABLE managers (manager_id INTEGER PRIMARY KEY, user_id INTEGER NOT NULL, restaurant_id INTEGER NOT NULL, name TEXT NOT NULL, phone_number TEXT NOT NULL, email TEXT NOT NULL, profile_pic TEXT NOT NULL, entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime')));",
  "columns": [
    "manager_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "restaurant_id INTEGER NOT NULL",
    "name TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "email TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ],
  "kwargs": {
    "table": "managers",
    "columns": [
      "manager_id INTEGER PRIMARY KEY",
      "user_id INTEGER NOT NULL",
      "restaurant_id INTEGER NOT NULL",
      "name TEXT NOT NULL",
      "phone_number TEXT NOT NULL",
      "email TEXT NOT NULL",
      "profile_pic TEXT NOT NULL",
      "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
    ]
  },
  "table": "managers"
}
127.0.0.1 2022-10-19 04:58:50.686504 GET http://localhost:8888/deleteTable/restaurants 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurants"
}
127.0.0.1 2022-10-19 04:59:07.326884 GET http://localhost:8888/createTable/restaurant_profile/restaurant_id/INTEGER/manager_id/INTEGER/restaurant_name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/profile_pic/TEXT/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_profile",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "manager_id INTEGER NOT NULL",
    "restaurant_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:00:23.406363 GET http://localhost:8888/createTable/restaurant_photos/photo_id/INTEGER/restaurant_id/INTEGER/photo_url/TEXT/create_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_photos",
  "columns": [
    "photo_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "photo_url TEXT NOT NULL",
    "create_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:08:45.280828 GET http://localhost:8888/createTable/restaurant_schedule/schedule_id/INTEGER/restaurant_id/INTEGER/mon_open/DATETIME/mon_close/DATETIME/tue_open/DATETIME/tue_close/DATETIME/wed_open/DATETIME/wed_close/DATETIME/thu_open/DATETIME/thu_close/DATETIME/fri_open/DATETIME/fri_close/DATETIME/sat_open/DATETIME/sat_close/DATETIME/sun_open/DATETIME/sun_close/DATETIME/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_schedule",
  "columns": [
    "schedule_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "mon_open DATETIME NOT NULL",
    "mon_close DATETIME NOT NULL",
    "tue_open DATETIME NOT NULL",
    "tue_close DATETIME NOT NULL",
    "wed_open DATETIME NOT NULL",
    "wed_close DATETIME NOT NULL",
    "thu_open DATETIME NOT NULL",
    "thu_close DATETIME NOT NULL",
    "fri_open DATETIME NOT NULL",
    "fri_close DATETIME NOT NULL",
    "sat_open DATETIME NOT NULL",
    "sat_close DATETIME NOT NULL",
    "sun_open DATETIME NOT NULL",
    "sun_close DATETIME NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:10:56.673264 GET http://localhost:8888/deleteTable/restaurant_photos 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_photos"
}
127.0.0.1 2022-10-19 05:11:03.395466 GET http://localhost:8888/createTable/restaurant_photos/photo_id/INTEGER/restaurant_id/INTEGER/photo_url/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_photos",
  "columns": [
    "photo_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "photo_url TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:11:35.460175 GET http://localhost:8888/deleteTable/restaurant_profile 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_profile"
}
127.0.0.1 2022-10-19 05:11:44.834669 GET http://localhost:8888/createTable/restaurant_profile/restaurant_id/INTEGER/manager_id/INTEGER/restaurant_name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_profile",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "manager_id INTEGER NOT NULL",
    "restaurant_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:14:28.093163 GET http://localhost:8888/deleteTable/managers 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "managers"
}
127.0.0.1 2022-10-19 05:15:02.749904 GET http://localhost:8888/createTable/managers/manager_id/INTEGER/user_id/INTEGER/restaurant_id/INTEGER/first_name/TEXT/last_name/TEXT/phone_number/TEXT/email/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "managers",
  "columns": [
    "manager_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "restaurant_id INTEGER NOT NULL",
    "first_name TEXT NOT NULL",
    "last_name TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "email TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:16:14.731924 GET http://localhost:8888/createTable/bartenders/bartender_id/INTEGER/user_id/INTEGER/first_name/TEXT/last_name/TEXT/phone_number/TEXT/email/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "bartenders",
  "columns": [
    "bartender_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "first_name TEXT NOT NULL",
    "last_name TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "email TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:18:46.666838 GET http://localhost:8888/deleteTable/bartenders 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "bartenders"
}
127.0.0.1 2022-10-19 05:19:09.343314 GET http://localhost:8888/createTable/bartenders/bartender_id/INTEGER/user_id/INTEGER/first_name/TEXT/last_name/TEXT/address/TEXT/phone_number/TEXT/email/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "bartenders",
  "columns": [
    "bartender_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "first_name TEXT NOT NULL",
    "last_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "email TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:25:39.263020 GET http://localhost:8888/createTable/bartender_wages/entry_id/INTEGER/bartender_id/INTEGER/restaurant_id/INTEGER/hourly_wage/DOUBLE/tips/DOUBLE/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "bartender_wages",
  "columns": [
    "entry_id INTEGER PRIMARY KEY",
    "bartender_id INTEGER NOT NULL",
    "restaurant_id INTEGER NOT NULL",
    "hourly_wage DOUBLE NOT NULL",
    "tips DOUBLE NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:30:35.267665 GET http://localhost:8888/createTable/restaurant_requests/request_id/INTEGER/restaurant_id/INTEGER/hourly_wage/DOUBLE/shift_start/DATETIME/shift_end/DATETIME/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_requests",
  "columns": [
    "request_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "hourly_wage DOUBLE NOT NULL",
    "shift_start DATETIME NOT NULL",
    "shift_end DATETIME NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 05:31:43.130069 GET http://localhost:8888/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 07:08:24.274843 GET http://localhost:8888/uploadImageUrl 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 07:08:36.660523 GET http://localhost:8888/login?username=admin&password=admin 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 07:08:52.738074 GET http://localhost:8888/uploadImageUrl 200 OK
{"request.params": {}}
{
  "message": "missing parameters",
  "required": [
    [
      "url"
    ]
  ],
  "submitted": [
    {}
  ]
}
127.0.0.1 2022-10-19 07:10:22.795685 GET http://localhost:8888/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg 200 OK
{"request.params": {"url": "https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg"}}
{
  "message": "image url uploaded",
  "url": "https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg",
  "filename": "/static/img/{name}.{ext}"
}
127.0.0.1 2022-10-19 07:12:28.696230 GET http://localhost:8888/static/img/1.jpeg 200 OK
127.0.0.1 2022-10-19 07:13:16.052504 GET http://localhost:8888/static/img/1.jpeg 200 OK
127.0.0.1 2022-10-19 07:13:17.123999 GET http://localhost:8888/static/img/1.jpeg 200 OK
127.0.0.1 2022-10-19 07:14:08.761890 GET http://localhost:8888/login?username=admin&password=admin 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 07:14:23.174768 GET http://localhost:8888/static/img/1.jpeg 200 OK
127.0.0.1 2022-10-19 07:17:20.022261 GET http://localhost:8888/static/img/1.jpeg 200 OK
127.0.0.1 2022-10-19 07:19:27.711445 GET http://localhost:8888/static/img/1.jpeg 200 OK
<_io.BufferedReader name='/Users/katayama/Documents/School/Senior_Design/CAPSTONE_2022_2023/BarTender/bartend_backend/static/img/1.jpeg'>
127.0.0.1 2022-10-19 07:20:16.241842 GET http://localhost:8888/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg 200 OK
{"request.params": {"url": "https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg"}}
{
  "message": "image url uploaded",
  "url": "https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg",
  "filename": "/static/img/1.jpeg"
}
127.0.0.1 2022-10-19 07:26:48.691889 GET http://localhost:8888/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png 200 OK
{"request.params": {"url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png"}}
{
  "message": "image url uploaded",
  "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
  "filename": "/static/img/2.png"
}
127.0.0.1 2022-10-19 07:53:09.917630 GET http://localhost:8888/register 200 OK
{"request.params": {}}
{
  "message": "missing paramater",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 07:57:48.876780 GET http://localhost:8888/login 200 OK
{"request.params": {}}
{
  "message": "missing parameters",
  "required": [
    {
      "username": "TEXT",
      "password": "TEXT"
    }
  ],
  "submitted": [
    {}
  ]
}
127.0.0.1 2022-10-19 08:02:00.529534 GET http://localhost:8888/register/username/teddy/password/teddy/password2/teddy 200 OK
{"request.params": {}}
{
  "message": "missing paramater",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 08:05:47.138450 GET http://localhost:8888/register/username/teddy/password/teddy/password2/teddy 200 OK
{"request.params": {}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 08:06:45.846092 GET http://localhost:8888/register/username/teddy/password/teddy/password2/teddy 200 OK
{"request.params": {}}
{
  "message": "new user created",
  "user_id": 2,
  "username": "teddy"
}
127.0.0.1 2022-10-19 08:09:12.898370 GET http://localhost:8888/delete 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 08:09:25.634676 GET http://localhost:8888/delete/users 200 OK
{"request.params": {}}
{
  "message": "missing a query param(s)",
  "query_params": [
    {
      "user_id": "INTEGER",
      "username": "TEXT",
      "password": "TEXT",
      "create_time": "DATETIME",
      "filter": ""
    }
  ],
  "submitted": [
    {}
  ]
}
127.0.0.1 2022-10-19 08:09:36.400321 GET http://localhost:8888/delete/users/user_id/2 200 OK
{"request.params": {}}
{
  "message": "1 user entry deleted",
  "submitted": [
    {
      "user_id": "2"
    }
  ]
}
127.0.0.1 2022-10-19 08:10:00.651316 GET http://localhost:8888/register?username=teddy&password=teddy&password2=teddy 200 OK
{"request.params": {"username": "teddy", "password": "teddy", "password2": "teddy"}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 08:10:20.635897 GET http://localhost:8888/register?username=teddy&password=teddy&password2=teddy 200 OK
{"request.params": {"username": "teddy", "password": "teddy", "password2": "teddy"}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 08:11:12.100556 GET http://localhost:8888/register?username=teddy&password=teddy&password2=teddy 200 OK
{"request.params": {"username": "teddy", "password": "teddy", "password2": "teddy"}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 08:15:55.738248 GET http://localhost:8888/register?username=teddy&password=teddy&password2=teddy 200 OK
{"request.params": {"username": "teddy", "password": "teddy", "password2": "teddy"}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 08:16:15.364032 GET http://localhost:8888/register?username=teddy&password=teddy&password2=teddy 200 OK
{"request.params": {"username": "teddy", "password": "teddy", "password2": "teddy"}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 08:16:26.975640 GET http://localhost:8888/register/username/teddy/password/teddy/password2/teddy 200 OK
{"request.params": {}}
{
  "message": "new user created",
  "user_id": 2,
  "username": "teddy"
}
127.0.0.1 2022-10-19 08:16:32.155369 GET http://localhost:8888/delete/users/user_id/2 200 OK
{"request.params": {}}
{
  "message": "1 user entry deleted",
  "submitted": [
    {
      "user_id": "2"
    }
  ]
}
127.0.0.1 2022-10-19 08:17:30.349391 GET http://localhost:8888/delete/users/user_id/2 200 OK
{"request.params": {}}
{
  "message": "0 user entries found matching your parameters",
  "submitted": [
    {
      "user_id": "2"
    }
  ]
}
127.0.0.1 2022-10-19 08:17:35.298646 GET http://localhost:8888/register/username/teddy/password/teddy/password2/teddy 200 OK
{"request.params": {}}
{
  "message": "new user created",
  "user_id": 2,
  "username": "teddy"
}
127.0.0.1 2022-10-19 08:18:01.123877 GET http://localhost:8888/delete/users/user_id/2 200 OK
{"request.params": {}}
{
  "message": "1 user entry deleted",
  "submitted": [
    {
      "user_id": "2"
    }
  ]
}
127.0.0.1 2022-10-19 08:18:04.920426 GET http://localhost:8888/register?username=teddy&password=teddy&password2=teddy 200 OK
{"request.params": {"username": "teddy", "password": "teddy", "password2": "teddy"}}
{
  "message": "new user created",
  "user_id": 2,
  "username": "teddy"
}
127.0.0.1 2022-10-19 08:18:11.717462 GET http://localhost:8888/delete/users/user_id/2 200 OK
{"request.params": {}}
{
  "message": "1 user entry deleted",
  "submitted": [
    {
      "user_id": "2"
    }
  ]
}
127.0.0.1 2022-10-19 08:48:32.065645 GET http://localhost:8888/uploadImageUrl/url/https%3A/www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg 200 OK
{"request.params": {}}
{
  "message": "image url uploaded",
  "url": "https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg",
  "filename": "/static/img/1.jpeg"
}
127.0.0.1 2022-10-19 08:48:52.664386 GET http://localhost:8888/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg 200 OK
{"request.params": {"url": "https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg"}}
{
  "message": "image url uploaded",
  "url": "https://www.ironhillbrewery.com/assets/craft/_locationPic1x/locations_0005_newark.jpg",
  "filename": "/static/img/1.jpeg"
}
127.0.0.1 2022-10-19 08:51:08.337026 GET http://localhost:8888/uploadImageUrl 200 OK
{"request.params": {}}
{
  "message": "missing parameters",
  "required": [
    [
      "url"
    ]
  ],
  "submitted": [
    {}
  ]
}
127.0.0.1 2022-10-19 09:00:04.788242 GET http://localhost:8888/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:00:14.930426 GET http://localhost:8888/add/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: '/add'",
  "description": "add a single entry into a table: <table_name>",
  "endpoints": {
    "/add": {
      "returns": "returns all tables[] in the database"
    },
    "/add/usage": {
      "returns": "message: 'usage-info"
    },
    "/add/<table_name>": {
      "returns": "message: 'missing parameters'"
    },
    "/add/<table_name>/<param_name>/<param_value>": {
      "url_paths": "add entry: 'param_name=param_value'",
      "example": "/add/users/username/user_01/password/user_01",
      "response": {
        "message": "data added to {users}",
        "user_id": 8
      }
    },
    "/add/<table_name>?param_name=param_value": {
      "params": "add entry: 'param_name=param_value'",
      "example": "/add/users?username=user_01&password=user_01",
      "response": {
        "message": "data added to {users}",
        "user_id": 8
      }
    },
    "Required": "'user_id' and all params not '*_id' and '*_time'",
    "Exception": "no 'user_id' when adding to the users table",
    "Response": {
      "'user_id'": "when entry added to 'users' table",
      "'<ref>_id'": "when entry added to any other table"
    }
  }
}
127.0.0.1 2022-10-19 09:00:34.805058 GET http://localhost:8888/register 200 OK
{"request.params": {}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 09:00:40.662218 GET http://localhost:8888/register/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /register",
  "description": "Register a new user to the [users] table",
  "end_points": {
    "/register": {
      "returns": "missing paramaters"
    },
    "/register/<param_name>/<param_value>": {
      "url_paths": "register with: 'param_name=param_value'",
      "example": "/register/username/admin/password/admin",
      "response": {
        "message": "new user created",
        "user_id": 2,
        "username": "teddy"
      }
    },
    "/register?param_name=param_value": {
      "url_paths": "register with: 'param_name=param_value'",
      "example": "/register?username=teddy&password=teddy&password2=teddy",
      "response": {
        "message": "new user created",
        "user_id": 2,
        "username": "teddy"
      }
    },
    "Required": {
      "Parameters": {
        "username": "TEXT",
        "password": "TEXT",
        "password2": "TEXT"
      }
    },
    "Response": {
      "message": "new user created",
      "user_id": "INTEGER",
      "username": "TEXT",
      "token": "TEXT"
    }
  }
}
127.0.0.1 2022-10-19 09:01:18.782620 GET http://localhost:8888/login 200 OK
{"request.params": {}}
{
  "message": "missing parameters",
  "required": [
    {
      "username": "TEXT",
      "password": "TEXT"
    }
  ],
  "submitted": [
    {}
  ]
}
127.0.0.1 2022-10-19 09:01:22.808461 GET http://localhost:8888/login/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /login",
  "description": "login a user",
  "end_points": {
    "/login": {
      "returns": "message: 'missing parameters'"
    },
    "/login/<param_name>/<param_value>": {
      "url_paths": "login with: 'param_name=param_value'",
      "example": "/login/username/admin/password/admin",
      "response": {
        "message": "user login success",
        "user_id": 1,
        "username": "admin",
        "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
      }
    },
    "/login?param_name=param_value": {
      "params": "login with: 'param_name=param_value'",
      "example": "/login?username=admin&password=admin",
      "response": {
        "message": "user login success",
        "user_id": 1,
        "username": "admin",
        "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
      }
    },
    "Required": {
      "Parameters": {
        "username": "TEXT",
        "password": "TEXT"
      }
    },
    "Response": {
      "message": "user login success",
      "user_id": "INTEGER",
      "username": "TEXT",
      "token": "TEXT"
    }
  }
}
127.0.0.1 2022-10-19 09:01:35.547226 GET http://localhost:8888/uploadImageUrl 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:01:39.845392 GET http://localhost:8888/uploadImageUrl/usage 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:03:14.078872 GET http://localhost:8888/createTable 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:03:17.790433 GET http://localhost:8888/createTable/usage 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:04:06.194385 GET http://localhost:8888/createTable/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /createTable",
  "description": "create a table and insert it into the database",
  "end_points": {
    "/createTable": {
      "returns": "return all tables[] in the database"
    },
    "/createTable/usage": {
      "returns": "message: 'usage-info'"
    },
    "/createTable/<table_name>": {
      "returns": "message: 'missing parameters'"
    },
    "/createTable/<table_name>/<column_name>/<column_type>": {
      "url_paths": "create columns: 'param_name=param_'",
      "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
      "response": {
        "message": "1 table created",
        "table": "steps",
        "columns": [
          "step_id INTEGER PRIMARY KEY",
          "user_id INTEGER NOT NULL",
          "step_count INTEGER NOT NULL",
          "latitude DOUBLE NOT NULL",
          "longitude DOUBLE NOT NULL",
          "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
        ]
      }
    },
    "/createTable/<table_name>?column_name=column_type": {
      "params": "create columns: 'param_name=param_value'",
      "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
      "response": {
        "message": "1 table created",
        "table": "steps",
        "columns": [
          "step_id INTEGER PRIMARY KEY",
          "user_id INTEGER NOT NULL",
          "step_count INTEGER NOT NULL",
          "latitude DOUBLE NOT NULL",
          "longitude DOUBLE NOT NULL",
          "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
        ]
      }
    },
    "Required": {
      "Parameters": {
        "user_id": "INTEGER",
        "{ref}_id": "INTEGER",
        "{ref}_time": "DATETIME",
        "column_name": "lowercase with underscores where appropriate",
        "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
      }
    },
    "Exception": "'{ref}_id' not required when creating 'users' table",
    "Response": {
      "message": "number of tables created",
      "table": "the table name",
      "columns[]": "array of columns with their type"
    }
  }
}
127.0.0.1 2022-10-19 09:04:08.595772 GET http://localhost:8888/createTable 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:04:13.298090 GET http://localhost:8888/deleteTable 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:04:16.885764 GET http://localhost:8888/deleteTable/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /deleteTable",
  "description": "delete a table from the database",
  "end_points": {
    "/deleteTable": {
      "returns": "return all tables[] in the database"
    },
    "/deleteTable/usage": {
      "returns": "message: 'usage-info'"
    },
    "/deleteTable/<table_name>": {
      "action": "delete the table: <table_name>",
      "example": "/deleteTable/steps",
      "response": {
        "message": "1 table deleted!",
        "table": "steps"
      }
    },
    "Required": "<table_name>",
    "Response": {
      "message": "number of deletes made",
      "table": "the name of the table that was deleted"
    }
  }
}
127.0.0.1 2022-10-19 09:05:46.756305 GET http://localhost:8888/deleteTable 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 09:05:53.721605 GET http://localhost:8888/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 09:46:07.215432 GET http://localhost:8888/register/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /register",
  "description": "Register a new user to the [users] table",
  "end_points": {
    "/register": {
      "returns": "missing paramaters"
    },
    "/register/<param_name>/<param_value>": {
      "url_paths": "register with: 'param_name=param_value'",
      "example": "/register/username/admin/password/admin",
      "response": {
        "message": "new user created",
        "user_id": 2,
        "username": "teddy"
      }
    },
    "/register?param_name=param_value": {
      "url_paths": "register with: 'param_name=param_value'",
      "example": "/register?username=teddy&password=teddy&password2=teddy",
      "response": {
        "message": "new user created",
        "user_id": 2,
        "username": "teddy"
      }
    },
    "Required": {
      "Parameters": {
        "username": "TEXT",
        "password": "TEXT",
        "password2": "TEXT"
      }
    },
    "Response": {
      "message": "new user created",
      "user_id": "INTEGER",
      "username": "TEXT",
      "token": "TEXT"
    }
  }
}
127.0.0.1 2022-10-19 09:47:46.138221 GET http://localhost:8888/uploadImageUrl/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /uploadImageUrl",
  "description": "upload an image to the backend via image url",
  "end_points": {
    "/uploadImageUrl": {
      "returns": "missing paramaters"
    },
    "/uploadImageUrl/<param_name>/<param_value>": {
      "url_paths": "upload with: 'param_name=param_value'",
      "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
      "response": {
        "message": "image url uploaded",
        "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
        "filename": "/static/img/2.png"
      }
    },
    "/uploadImageUrl?param_name=param_value": {
      "url_paths": "upload with: 'param_name=param_value'",
      "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
      "response": {
        "message": "image url uploaded",
        "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
        "filename": "/static/img/2.png"
      }
    },
    "Required": {
      "Parameters": {
        "url": "TEXT"
      }
    },
    "Response": {
      "message": "image url uploaded",
      "url": "TEXT",
      "filename": "TEXT"
    }
  }
}
127.0.0.1 2022-10-19 09:49:15.962636 GET http://localhost:8888/register 200 OK
{"request.params": {}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 09:59:35.952647 GET http://localhost:8888/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 11:14:02.266638 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:17:00.230367 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:17:17.640490 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:20:45.385139 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 11:20:59.286430 GET http://127.0.0.1:8881/login/username/add 200 OK
{"request.params": {}}
{
  "message": "missing parameters",
  "required": [
    {
      "username": "TEXT",
      "password": "TEXT"
    }
  ],
  "submitted": [
    {
      "username": "add"
    }
  ]
}
127.0.0.1 2022-10-19 11:25:07.649266 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:30:02.351706 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 11:30:29.785387 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 11:39:19.441895 HEAD http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:39:20.627390 HEAD http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:39:23.255851 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:55:33.923514 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:55:34.012151 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:55:35.240204 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:55:35.713214 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:55:36.380866 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 11:55:37.553330 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 12:05:24.238862 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:18:07.281923 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:18:14.430247 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:20:05.552714 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:20:07.980715 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:21:09.520274 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:21:11.849265 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:26:05.059190 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 12:27:30.908829 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:27:33.147318 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:32:07.786527 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:32:31.808540 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:33:26.701417 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:33:50.872047 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 12:35:02.412067 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:35:20.180736 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:35:30.434760 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:35:32.735849 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:40:53.178276 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 12:45:01.458382 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:45:09.120643 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:46:12.335045 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 12:48:54.548798 POST http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:49:06.510765 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:49:17.591181 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 12:49:20.163309 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 12:49:20.901604 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 12:49:23.952168 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 12:50:07.287581 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 12:52:43.060215 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:53:25.338902 POST http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:56:53.482342 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 12:56:53.515712 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 12:57:01.753652 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:05:40.669063 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:06:09.239250 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:06:35.820748 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 13:06:59.381905 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 13:07:03.771848 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 13:07:27.916803 GET http://127.0.0.1:8881/login/username/admin/password/admin 200 OK
{"request.params": {}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 13:07:29.913268 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "invalid token"
}
127.0.0.1 2022-10-19 13:08:44.382404 POST http://127.0.0.1:8881/login 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 13:08:57.090543 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:09:06.685795 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:09:09.975771 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:09:19.356999 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:09:21.902564 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:09:35.492825 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:10:15.863829 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:10:28.799618 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:10:38.497064 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:10:43.020053 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:10:52.036035 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:11:04.414231 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:11:07.190821 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:11:13.683859 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:11:50.998472 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:12:04.852786 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:12:35.112108 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:13:06.660334 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:14:26.012524 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:14:26.090250 GET http://127.0.0.1:8881/deleteTable/restaurant_schedule 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_schedule"
}
127.0.0.1 2022-10-19 13:14:26.332027 GET http://127.0.0.1:8881/deleteTable/restaurant_photos 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_photos"
}
127.0.0.1 2022-10-19 13:14:26.508485 GET http://127.0.0.1:8881/deleteTable/restaurant_profile 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_profile"
}
127.0.0.1 2022-10-19 13:14:26.673792 GET http://127.0.0.1:8881/deleteTable/managers 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "managers"
}
127.0.0.1 2022-10-19 13:14:26.841748 GET http://127.0.0.1:8881/deleteTable/bartenders 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "bartenders"
}
127.0.0.1 2022-10-19 13:14:27.017252 GET http://127.0.0.1:8881/deleteTable/bartender_wages 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "bartender_wages"
}
127.0.0.1 2022-10-19 13:14:27.151500 GET http://127.0.0.1:8881/deleteTable/restaurant_requests 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "restaurant_requests"
}
127.0.0.1 2022-10-19 13:14:35.054985 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 13:16:56.623603 GET http://127.0.0.1:8881/createTable/managers/manager_id/INTEGER/user_id/INTEGER/restaurant_id/INTEGER/first_name/TEXT/last_name/TEXT/phone_number/TEXT/email/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "managers",
  "columns": [
    "manager_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "restaurant_id INTEGER NOT NULL",
    "first_name TEXT NOT NULL",
    "last_name TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "email TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 13:18:05.757226 GET http://127.0.0.1:8881/createTable/restaurant_profile/restaurant_id/INTEGER/manager_id/INTEGER/restaurant_name/TEXT/address/TEXT/bio/TEXT/phone_number/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_profile",
  "columns": [
    "restaurant_id INTEGER PRIMARY KEY",
    "manager_id INTEGER NOT NULL",
    "restaurant_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "bio TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 13:18:40.376340 GET http://127.0.0.1:8881/createTable/restaurant_photos/photo_id/INTEGER/restaurant_id/INTEGER/photo_url/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_photos",
  "columns": [
    "photo_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "photo_url TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 13:19:03.698232 GET http://127.0.0.1:8881/createTable/restaurant_schedule/schedule_id/INTEGER/restaurant_id/INTEGER/mon_open/DATETIME/mon_close/DATETIME/tue_open/DATETIME/tue_close/DATETIME/wed_open/DATETIME/wed_close/DATETIME/thu_open/DATETIME/thu_close/DATETIME/fri_open/DATETIME/fri_close/DATETIME/sat_open/DATETIME/sat_close/DATETIME/sun_open/DATETIME/sun_close/DATETIME/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_schedule",
  "columns": [
    "schedule_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "mon_open DATETIME NOT NULL",
    "mon_close DATETIME NOT NULL",
    "tue_open DATETIME NOT NULL",
    "tue_close DATETIME NOT NULL",
    "wed_open DATETIME NOT NULL",
    "wed_close DATETIME NOT NULL",
    "thu_open DATETIME NOT NULL",
    "thu_close DATETIME NOT NULL",
    "fri_open DATETIME NOT NULL",
    "fri_close DATETIME NOT NULL",
    "sat_open DATETIME NOT NULL",
    "sat_close DATETIME NOT NULL",
    "sun_open DATETIME NOT NULL",
    "sun_close DATETIME NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 13:19:45.852967 GET http://127.0.0.1:8881/createTable/restaurant_requests/request_id/INTEGER/restaurant_id/INTEGER/hourly_wage/DOUBLE/shift_start/DATETIME/shift_end/DATETIME/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "restaurant_requests",
  "columns": [
    "request_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "hourly_wage DOUBLE NOT NULL",
    "shift_start DATETIME NOT NULL",
    "shift_end DATETIME NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 13:19:58.127844 GET http://127.0.0.1:8881/createTable/bartenders/bartender_id/INTEGER/user_id/INTEGER/first_name/TEXT/last_name/TEXT/address/TEXT/phone_number/TEXT/email/TEXT/profile_pic/TEXT/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "bartenders",
  "columns": [
    "bartender_id INTEGER PRIMARY KEY",
    "user_id INTEGER NOT NULL",
    "first_name TEXT NOT NULL",
    "last_name TEXT NOT NULL",
    "address TEXT NOT NULL",
    "phone_number TEXT NOT NULL",
    "email TEXT NOT NULL",
    "profile_pic TEXT NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 13:20:10.034002 GET http://127.0.0.1:8881/createTable/bartender_wages/entry_id/INTEGER/bartender_id/INTEGER/restaurant_id/INTEGER/hourly_wage/DOUBLE/tips/DOUBLE/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "bartender_wages",
  "columns": [
    "entry_id INTEGER PRIMARY KEY",
    "bartender_id INTEGER NOT NULL",
    "restaurant_id INTEGER NOT NULL",
    "hourly_wage DOUBLE NOT NULL",
    "tips DOUBLE NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 14:13:39.899036 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:20:46.987171 GET http://127.0.0.1:8881/login?username=admin&password=123 200 OK
{"request.params": {"username": "admin", "password": "123"}}
{
  "message": "incorrect password",
  "password": "123"
}
127.0.0.1 2022-10-19 14:27:54.774322 GET http://127.0.0.1:8881/login?username=admin&password=123 200 OK
{"request.params": {"username": "admin", "password": "123"}}
{
  "message": "incorrect password",
  "password": "123"
}
127.0.0.1 2022-10-19 14:28:19.089676 GET http://127.0.0.1:8881/login?username=admin&password=123 200 OK
{"request.params": {"username": "admin", "password": "123"}}
{
  "message": "incorrect password",
  "password": "123"
}
127.0.0.1 2022-10-19 14:31:36.587616 GET http://127.0.0.1:8881/login?username=admin&password=123 200 OK
{"request.params": {"username": "admin", "password": "123"}}
{
  "message": "incorrect password",
  "password": "123"
}
127.0.0.1 2022-10-19 14:31:56.179525 GET http://127.0.0.1:8881/login?username=admin&password=123 200 OK
{"request.params": {"username": "admin", "password": "123"}}
{
  "message": "incorrect password",
  "password": "123"
}
127.0.0.1 2022-10-19 14:32:55.001330 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 14:33:11.966752 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 14:33:29.362323 GET http://127.0.0.1:8881/login?username=admin&password=admin 200 OK
{"request.params": {"username": "admin", "password": "admin"}}
{
  "message": "user login success",
  "user_id": 1,
  "username": "admin",
  "token": "ITI2Mlo1amZRaGdLZzdvMGJrK2Jiamc9PT9nQVNWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
}
127.0.0.1 2022-10-19 14:34:00.288981 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 14:34:00.457365 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 14:39:16.543043 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 14:40:13.343309 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:40:31.130567 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:42:32.690651 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:46:28.083542 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:47:08.505846 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:47:30.337789 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:48:06.580701 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:49:59.796757 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:53:31.375969 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:57:53.539453 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:58:14.200565 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:58:21.646873 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:59:16.664779 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 14:59:37.062017 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:01:30.191888 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:05:18.640168 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:07:14.669719 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 15:08:54.419715 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:12:38.233817 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:13:56.127557 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:14:18.920976 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:14:24.745980 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:14:29.297361 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:14:31.404393 GET http://127.0.0.1:8881/add 200 OK
{"request.params": {}}
{
  "message": "active tables in the database",
  "tables": [
    {
      "name": "users",
      "type": "table",
      "columns": [
        {
          "name": "user_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "username",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "password",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "create_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "managers",
      "type": "table",
      "columns": [
        {
          "name": "manager_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_profile",
      "type": "table",
      "columns": [
        {
          "name": "restaurant_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "manager_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "bio",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_photos",
      "type": "table",
      "columns": [
        {
          "name": "photo_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "photo_url",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_schedule",
      "type": "table",
      "columns": [
        {
          "name": "schedule_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "mon_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "mon_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "tue_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "wed_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "thu_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "fri_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sat_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_open",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "sun_close",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "restaurant_requests",
      "type": "table",
      "columns": [
        {
          "name": "request_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "shift_start",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "shift_end",
          "type": "DATETIME NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartenders",
      "type": "table",
      "columns": [
        {
          "name": "bartender_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "user_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "first_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "last_name",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "address",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "phone_number",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "email",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "profile_pic",
          "type": "TEXT NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    },
    {
      "name": "bartender_wages",
      "type": "table",
      "columns": [
        {
          "name": "entry_id",
          "type": "INTEGER PRIMARY KEY"
        },
        {
          "name": "bartender_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "restaurant_id",
          "type": "INTEGER NOT NULL"
        },
        {
          "name": "hourly_wage",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "tips",
          "type": "DOUBLE NOT NULL"
        },
        {
          "name": "entry_time",
          "type": "DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
        }
      ]
    }
  ]
}
127.0.0.1 2022-10-19 15:21:32.733824 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 15:21:33.015209 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 15:27:52.570671 GET http://127.0.0.1:8881/createTable/requests/request_id/INTEGER/restaurant_id/INTEGER/hourly_wage/DOUBLE/shift_start/DATETIME/shift_end/DATETIME/entry_time/DATETIME 200 OK
{"request.params": {}}
{
  "message": "1 table created",
  "table": "requests",
  "columns": [
    "request_id INTEGER PRIMARY KEY",
    "restaurant_id INTEGER NOT NULL",
    "hourly_wage DOUBLE NOT NULL",
    "shift_start DATETIME NOT NULL",
    "shift_end DATETIME NOT NULL",
    "entry_time DATETIME NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%f', 'now', 'localtime'))"
  ]
}
127.0.0.1 2022-10-19 15:28:13.790981 GET http://127.0.0.1:8881/deleteTable/usage 200 OK
{"request.params": {}}
{
  "message": "usage info: /deleteTable",
  "description": "delete a table from the database",
  "end_points": {
    "/deleteTable": {
      "returns": "return all tables[] in the database"
    },
    "/deleteTable/usage": {
      "returns": "message: 'usage-info'"
    },
    "/deleteTable/<table_name>": {
      "action": "delete the table: <table_name>",
      "example": "/deleteTable/steps",
      "response": {
        "message": "1 table deleted!",
        "table": "steps"
      }
    },
    "Required": "<table_name>",
    "Response": {
      "message": "number of deletes made",
      "table": "the name of the table that was deleted"
    }
  }
}
127.0.0.1 2022-10-19 15:28:21.398436 GET http://127.0.0.1:8881/deleteTable/requests 200 OK
{"request.params": {}}
{
  "message": "1 table deleted!",
  "table": "requests"
}
127.0.0.1 2022-10-19 15:43:03.947658 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 15:45:15.952191 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 16:06:54.334222 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 16:20:41.551346 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 16:20:54.322982 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 16:56:25.622487 GET http://127.0.0.1:8881/?XDEBUG_SESSION_START=phpstorm 200 OK
{"request.params": {"XDEBUG_SESSION_START": "phpstorm"}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 17:19:54.462458 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 17:20:06.030645 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 20:00:56.371945 GET http://127.0.0.1:8881/register 200 OK
{"request.params": {}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 20:02:08.208520 GET http://127.0.0.1:8881/register 200 OK
{"request.params": {}}
{
  "message": "missing parameter",
  "required params": [
    "username",
    "password",
    "password2"
  ]
}
127.0.0.1 2022-10-19 20:09:14.030310 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 20:40:13.644897 GET http://127.0.0.1:8881/login 200 OK
{"request.params": {}}
{
  "message": "missing parameters",
  "required": [
    {
      "username": "TEXT",
      "password": "TEXT"
    }
  ],
  "submitted": [
    {}
  ]
}
127.0.0.1 2022-10-19 20:51:33.398842 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 20:52:08.552817 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 21:42:04.368477 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
127.0.0.1 2022-10-19 22:13:25.358758 GET http://127.0.0.1:8881/ 200 OK
{"request.params": {}}
{
  "message": "API_Endpoints",
  "User_Functions": {
    "/login": {
      "message": "usage info: /login",
      "description": "login a user",
      "end_points": {
        "/login": {
          "returns": "message: 'missing parameters'"
        },
        "/login/<param_name>/<param_value>": {
          "url_paths": "login with: 'param_name=param_value'",
          "example": "/login/username/admin/password/admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "/login?param_name=param_value": {
          "params": "login with: 'param_name=param_value'",
          "example": "/login?username=admin&password=admin",
          "response": {
            "message": "user login success",
            "user_id": 1,
            "username": "admin",
            "token": "IVA1WTF3UDhOSHVacm1GUk1DRVVaMFE9PT9nQVdWRVFBQUFBQUFBQUNNQjNWelpYSmZhV1NVakFFeGxJYVVMZz09"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT"
          }
        },
        "Response": {
          "message": "user login success",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    },
    "/logout": {
      "message": "usage info: /logout",
      "description": "logout a user",
      "end_points": {
        "/logout": {
          "returns": "message: 'user logged out'"
        }
      }
    },
    "/register": {
      "message": "usage info: /register",
      "description": "Register a new user to the [users] table",
      "end_points": {
        "/register": {
          "returns": "missing paramaters"
        },
        "/register/<param_name>/<param_value>": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register/username/admin/password/admin",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "/register?param_name=param_value": {
          "url_paths": "register with: 'param_name=param_value'",
          "example": "/register?username=teddy&password=teddy&password2=teddy",
          "response": {
            "message": "new user created",
            "user_id": 2,
            "username": "teddy"
          }
        },
        "Required": {
          "Parameters": {
            "username": "TEXT",
            "password": "TEXT",
            "password2": "TEXT"
          }
        },
        "Response": {
          "message": "new user created",
          "user_id": "INTEGER",
          "username": "TEXT",
          "token": "TEXT"
        }
      }
    }
  },
  "Admin_Functions": {
    "/createTable": {
      "message": "usage info: /createTable",
      "description": "create a table and insert it into the database",
      "end_points": {
        "/createTable": {
          "returns": "return all tables[] in the database"
        },
        "/createTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/createTable/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/createTable/<table_name>/<column_name>/<column_type>": {
          "url_paths": "create columns: 'param_name=param_'",
          "example": "/createTable/steps/step_id/INTEGER/user_id/INTEGER/step_count/INTEGER/latitude/DOUBLE/longitude/DOUBLE/step_time/DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "/createTable/<table_name>?column_name=column_type": {
          "params": "create columns: 'param_name=param_value'",
          "example": "/createTable/steps?step_id=INTEGER&user_id=INTEGER&step_count=INTEGER&latitude=DOUBLE&longitude=DOUBLE&step_time=DATETIME",
          "response": {
            "message": "1 table created",
            "table": "steps",
            "columns": [
              "step_id INTEGER PRIMARY KEY",
              "user_id INTEGER NOT NULL",
              "step_count INTEGER NOT NULL",
              "latitude DOUBLE NOT NULL",
              "longitude DOUBLE NOT NULL",
              "step_time DATETIME NOT NULL DEFAULT (strftime(\"%Y-%m-%d %H:%M:%f\", \"now\", \"localtime\"))"
            ]
          }
        },
        "Required": {
          "Parameters": {
            "user_id": "INTEGER",
            "{ref}_id": "INTEGER",
            "{ref}_time": "DATETIME",
            "column_name": "lowercase with underscores where appropriate",
            "column_type": "one of 'INTEGER', 'DOUBLE', 'TEXT', 'DATETIME'"
          }
        },
        "Exception": "'{ref}_id' not required when creating 'users' table",
        "Response": {
          "message": "number of tables created",
          "table": "the table name",
          "columns[]": "array of columns with their type"
        }
      }
    },
    "/deleteTable": {
      "message": "usage info: /deleteTable",
      "description": "delete a table from the database",
      "end_points": {
        "/deleteTable": {
          "returns": "return all tables[] in the database"
        },
        "/deleteTable/usage": {
          "returns": "message: 'usage-info'"
        },
        "/deleteTable/<table_name>": {
          "action": "delete the table: <table_name>",
          "example": "/deleteTable/steps",
          "response": {
            "message": "1 table deleted!",
            "table": "steps"
          }
        },
        "Required": "<table_name>",
        "Response": {
          "message": "number of deletes made",
          "table": "the name of the table that was deleted"
        }
      }
    }
  },
  "Core_Functions": {
    "/add": {
      "message": "usage info: '/add'",
      "description": "add a single entry into a table: <table_name>",
      "endpoints": {
        "/add": {
          "returns": "returns all tables[] in the database"
        },
        "/add/usage": {
          "returns": "message: 'usage-info"
        },
        "/add/<table_name>": {
          "returns": "message: 'missing parameters'"
        },
        "/add/<table_name>/<param_name>/<param_value>": {
          "url_paths": "add entry: 'param_name=param_value'",
          "example": "/add/users/username/user_01/password/user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "/add/<table_name>?param_name=param_value": {
          "params": "add entry: 'param_name=param_value'",
          "example": "/add/users?username=user_01&password=user_01",
          "response": {
            "message": "data added to {users}",
            "user_id": 8
          }
        },
        "Required": "'user_id' and all params not '*_id' and '*_time'",
        "Exception": "no 'user_id' when adding to the users table",
        "Response": {
          "'user_id'": "when entry added to 'users' table",
          "'<ref>_id'": "when entry added to any other table"
        }
      }
    },
    "/get": {
      "message": "usage info: '/get'",
      "description": "fetch entry/entries from a table: <table_name>",
      "endpoints": {
        "/get": {
          "returns": "return all tables[] in the database"
        },
        "/get/usage": {
          "returns": "{'message': 'usage-info'}"
        },
        "/get/<table_name>": {
          "returns": "returns all entries for the table: <table_name>"
        },
        "/get/<table_name>/<param_name>/<param_value>": {
          "url_paths": "match entries: 'param_name=param_value'",
          "example": "/get/users/username/bob",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>?param_name=param_value": {
          "params": "match entries: 'param_name=param_value'",
          "example": "/get/users?user_id=8",
          "response": {
            "message": "1 user entry found",
            "data": {
              "user_id": 8,
              "username": "bob",
              "password": "8..4",
              "create_time": "2022-04-05 03:25:57.163"
            }
          }
        },
        "/get/<table_name>/filter/query": {
          "url_paths": "match entries: 'filter=[query]'",
          "example": "/get/oximeter/filter/(temperature > '100.4') GROUP BY user_id",
          "response": {
            "message": "1 oximeter entry found",
            "data": {
              "entry_id": 53,
              "user_id": 8,
              "heart_rate": 133,
              "blood_o2": 95,
              "temperature": 101.71,
              "entry_time": "2022-04-05 12:16:54.651"
            }
          }
        },
        "/get/<table_name>?filter=query": {
          "params": "match entries: 'filter=[query]'",
          "example": "/get/users?filter=(create_time > \"2022-04-03\")",
          "response": {
            "message": "found 3 user entries",
            "data": [
              {
                "user_id": 6,
                "username": "M2band",
                "password": "3..4",
                "create_time": "2022-04-03 15:29:41.223"
              },
              {
                "user_id": 7,
                "username": "alice@udel.edu",
                "password": "d..a",
                "create_time": "2022-04-05 03:25:57.163"
              },
              {
                "user_id": 8,
                "username": "robert@udel.edu",
                "password": "8..4",
                "create_time": "2022-04-05 03:41:12.857"
              }
            ]
          }
        },
        "Options": {
          "Parameters": {
            "None": "submit no parameters (none required)",
            "/key/value": "match is limited to 'column_name == column_value'",
            "?key=value": "match is limited to 'column_name == column_value'",
            "/filter/query": "supports expressions, operators, and functions",
            "?filter=query": "supports expressions, operators, and functions"
          }
        },
        "Response": {
          "data": {
            "{object}": "a single object matching the parameters",
            "[{object}]": "a single object matching the parameters"
          }
        }
      }
    },
    "/edit": {
      "message": "usage info: '/edit'",
      "description": "edit entry/entries from a table: <table_name>",
      "endpoints": {
        "/edit": {
          "returns": "return all tables[] in the database"
        },
        "/edit/usage": {
          "returns": "message: 'usage-info'"
        },
        "/edit/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/edit/<table_name>/<param_name>/<param_value>": {
          "url_paths": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>?param_name=param_value": {
          "params": "edit entries: 'param_name=param_value'",
          "example": "/edit/users/username/robert?user_id=8",
          "response": {
            "message": "edited 1 user entry",
            "submitted": [
              {
                "username": "robert",
                "user_id": "8"
              }
            ]
          }
        },
        "/edit/<table_name>/filter/query": {
          "url_paths": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "/edit/<table_name>?filter=query": {
          "params": "edit entries: 'filter=[query]'",
          "example": "/edit/oximeter/temperature/(temperature-32.0)*(5.0/9.0)?filter=(user_id='7')",
          "response": {
            "message": "edited 6 oximeter entries",
            "submitted": [
              {
                "filter": "(user_id='7')",
                "temperature": "((5.0/9.0)*(temperature-32.0))"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 edit parameter": "any parameter not '*_id' or '*_time'",
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of edits made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    },
    "/delete": {
      "message": "usage info: '/delete'",
      "description": "delete entry/entries from a table: <table_name>",
      "endpoints": {
        "/delete": {
          "returns": "return all tables[] in the database"
        },
        "/delete/usage": {
          "returns": "message: 'usage-info'"
        },
        "/delete/<table_name>": {
          "returns": "message: 'missing a parameter'"
        },
        "/delete/<table_name>/<param_name>/<param_value>": {
          "url_paths": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?param_name=param_value": {
          "params": "delete entries: 'param_name=param_value'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>/filter/query": {
          "url_paths": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "/delete/<table_name>?filter=query": {
          "params": "delete entries: 'filter=[query]'",
          "example": "/delete/oximeter?filter=(user_id = '8' AND temperature > '100.4')",
          "response": {
            "message": "6 oximeter entries deleted",
            "submitted": [
              {
                "filter": "(user_id = '8' AND temperature > '100.4')"
              }
            ]
          }
        },
        "Required": {
          "Parameters": {
            "at least 1 reference parameter": "any '*_id' or '*_time' parameter or 'filter'"
          }
        },
        "Response": {
          "message": "number of deletes made",
          "submitted[]": "the parameters that were submitted"
        }
      }
    }
  },
  "Extra_Functions": {
    "/uploadImageUrl": {
      "message": "usage info: /uploadImageUrl",
      "description": "upload an image to the backend via image url",
      "end_points": {
        "/uploadImageUrl": {
          "returns": "missing paramaters"
        },
        "/uploadImageUrl/<param_name>/<param_value>": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl/url/https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "/uploadImageUrl?param_name=param_value": {
          "url_paths": "upload with: 'param_name=param_value'",
          "example": "/uploadImageUrl?url=https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
          "response": {
            "message": "image url uploaded",
            "url": "https://www.ironhillbrewery.com/assets/craft/TAPHOUSE_LOGO.png",
            "filename": "/static/img/2.png"
          }
        },
        "Required": {
          "Parameters": {
            "url": "TEXT"
          }
        },
        "Response": {
          "message": "image url uploaded",
          "url": "TEXT",
          "filename": "TEXT"
        }
      }
    }
  }
}
